<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JiiLib.SimpleDsl</name>
    </assembly>
    <members>
        <member name="T:JiiLib.SimpleDsl.FormatModifiers">
            <summary>
                Specifies how the output text is desired to be formatted.
            </summary>
        </member>
        <member name="F:JiiLib.SimpleDsl.FormatModifiers.None">
            <summary>
                No formatting is applied.
            </summary>
        </member>
        <member name="F:JiiLib.SimpleDsl.FormatModifiers.Bold">
            <summary>
                Bold formatting is applied.
            </summary>
        </member>
        <member name="F:JiiLib.SimpleDsl.FormatModifiers.Italic">
            <summary>
                Italic formatting is applied.
            </summary>
        </member>
        <member name="F:JiiLib.SimpleDsl.FormatModifiers.Underline">
            <summary>
                Underline formatting is applied.
            </summary>
        </member>
        <member name="T:JiiLib.SimpleDsl.IInterpreterConfig`1">
            <summary>
                Represents a contract for necessary lookups.
            </summary>
            <typeparam name="T">
                The element type used for <see cref="T:JiiLib.SimpleDsl.QueryInterpreter`1"/>.
            </typeparam>
        </member>
        <member name="M:JiiLib.SimpleDsl.IInterpreterConfig`1.FormatString(System.String,JiiLib.SimpleDsl.FormatModifiers)">
            <summary>
                If supported, formats a string to be displayed a certain way.
            </summary>
            <param name="value">
                The input string.
            </param>
            <param name="formats">
                The desired formats.
            </param>
            <returns>
                A string that will be displayed in the specified format on the target environment.
            </returns>
        </member>
        <member name="M:JiiLib.SimpleDsl.IInterpreterConfig`1.GetContainsMethod(System.Type)">
            <summary>
                Gets a method that will perform a 'Contains' operation on a given type.
            </summary>
            <param name="elementType">
                The type of the element.
            </param>
            <remarks>
                <note type="implementer">
                    This must reference a static method that takes in an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
                    of the <paramref name="elementType"/> and a <see cref="T:System.String"/> and returns a <see cref="T:System.Boolean"/>.
                </note>
            </remarks>
        </member>
        <member name="T:JiiLib.SimpleDsl.QueryInterpreter`1">
            <summary>
                Allows translating a user input string to query over some <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="T">
                The element type of an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </typeparam>
        </member>
        <member name="M:JiiLib.SimpleDsl.QueryInterpreter`1.#ctor(JiiLib.SimpleDsl.IInterpreterConfig{`0})">
            <summary>
                Creates a new interpreter.
            </summary>
            <param name="config">
                A config that contains necessary lookup logic.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="config"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:JiiLib.SimpleDsl.QueryInterpreter`1.ParseFull(System.String)">
            <summary>
                Parses the user input.
            </summary>
            <param name="query">
                The input query.
            </param>
            <returns>
                A <see cref="T:JiiLib.SimpleDsl.QueryParseResult`1"/> that contains the desired queries.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="query"/> was <see langword="null"/> or empty.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Some part of the query was not valid.
            </exception>
        </member>
        <member name="T:JiiLib.SimpleDsl.QueryParseResult`1">
            <summary>
                Contains the resulting functions that were parsed out of the user query,
                or the default of a function if that clause went unspecified.
            </summary>
            <typeparam name="T">
                The element type that is queried against.
            </typeparam>
        </member>
        <member name="P:JiiLib.SimpleDsl.QueryParseResult`1.InlineVars">
            <summary>
                The inline variables that have been declared for this query.
            </summary>
        </member>
        <member name="P:JiiLib.SimpleDsl.QueryParseResult`1.Predicate">
            <summary>
                The complete parsed predicate.
                The default function keeps everything.
            </summary>
        </member>
        <member name="P:JiiLib.SimpleDsl.QueryParseResult`1.Order">
            <summary>
                A function that orders the collection as desired.
                The default function leaves the collection as-is.
            </summary>
        </member>
        <member name="P:JiiLib.SimpleDsl.QueryParseResult`1.SkipAmount">
            <summary>
                The amount of items that are skipped. The default value is 0.
            </summary>
        </member>
        <member name="P:JiiLib.SimpleDsl.QueryParseResult`1.TakeAmount">
            <summary>
                The amount of items that are taken. The default value is 10.
            </summary>
        </member>
        <member name="P:JiiLib.SimpleDsl.QueryParseResult`1.Selector">
            <summary>
                The selector from <typeparamref name="T"/> to a <see cref="T:System.String"/>.
                The default function calls <see cref="M:System.Object.ToString"/>.
            </summary>
        </member>
        <member name="M:JiiLib.SimpleDsl.QueryParseResult`1.Apply(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Applies all the functions to the given collection.
            </summary>
            <param name="items">
                The collection to apply the query to.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="items"/> was <see langword="null"/>.
            </exception>
        </member>
    </members>
</doc>
